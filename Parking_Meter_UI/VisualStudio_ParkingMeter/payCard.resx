<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PwAAAABJRU5ErkJggg==
</value>
  </data>
</root>